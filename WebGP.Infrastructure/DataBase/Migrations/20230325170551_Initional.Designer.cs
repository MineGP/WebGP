// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebGP.Infrastructure.DataBase;

#nullable disable

namespace WebGP.Infrastructure.DataBase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230325170551_Initional")]
    partial class Initional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("WebGP.Domain.Entities.Discord", b =>
                {
                    b.Property<long>("DiscordId")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("discord_id");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("last_update")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("uuid");

                    b.HasIndex(new[] { "DiscordId" }, "discord_id")
                        .IsUnique();

                    b.HasIndex(new[] { "Uuid" }, "uuid")
                        .IsUnique();

                    b.ToTable("discord", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("WebGP.Domain.Entities.Online", b =>
                {
                    b.Property<string>("Uuid")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("uuid");

                    b.Property<string>("DataIcon")
                        .HasColumnType("text")
                        .HasColumnName("data_icon");

                    b.Property<string>("DataName")
                        .HasColumnType("text")
                        .HasColumnName("data_name");

                    b.Property<bool>("Die")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("die");

                    b.Property<string>("Gpose")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('SIT','LAY','NONE')")
                        .HasColumnName("gpose")
                        .HasDefaultValueSql("'NONE'");

                    b.Property<bool>("Hide")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hide");

                    b.Property<bool>("IsOp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_op");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("last_update")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("SkinUrl")
                        .HasColumnType("text")
                        .HasColumnName("skin_url");

                    b.Property<int?>("TimedId")
                        .HasColumnType("int(11)")
                        .HasColumnName("timed_id");

                    b.Property<int>("World")
                        .HasColumnType("int(11)")
                        .HasColumnName("world");

                    b.Property<double>("X")
                        .HasColumnType("double")
                        .HasColumnName("x");

                    b.Property<double>("Y")
                        .HasColumnType("double")
                        .HasColumnName("y");

                    b.Property<double>("Z")
                        .HasColumnType("double")
                        .HasColumnName("z");

                    b.Property<string>("ZoneSelector")
                        .HasColumnType("text")
                        .HasColumnName("zone_selector");

                    b.HasKey("Uuid")
                        .HasName("PRIMARY");

                    b.ToTable("online", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("WebGP.Domain.Entities.OnlineLog", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Day")
                        .HasColumnType("date")
                        .HasColumnName("day");

                    b.Property<int>("Sec")
                        .HasColumnType("int(11)")
                        .HasColumnName("sec");

                    b.Property<int>("SecAban")
                        .HasColumnType("int(11)")
                        .HasColumnName("sec_aban");

                    b.Property<int>("SecAfk")
                        .HasColumnType("int(11)")
                        .HasColumnName("sec_afk");

                    b.HasKey("Id", "Day")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("online_logs", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("WebGP.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("color")
                        .HasDefaultValueSql("'FFFFFF'");

                    b.Property<long?>("DiscordRole")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("discord_role");

                    b.Property<string>("HeadData")
                        .HasColumnType("text")
                        .HasColumnName("head_data");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_group");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("last_update")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("PermMenu")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("perm_menu");

                    b.Property<long>("PermMenuLocal")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("perm_menu_local");

                    b.Property<int>("Permissions")
                        .HasColumnType("int(11)")
                        .HasColumnName("permissions");

                    b.Property<sbyte>("Static")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("static");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("roles", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("WebGP.Domain.Entities.RoleWorkReadonly", b =>
                {
                    b.Property<string>("Icon")
                        .HasColumnType("mediumtext")
                        .HasColumnName("icon")
                        .UseCollation("utf8mb4_unicode_ci");

                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''")
                        .UseCollation("utf8mb4_unicode_ci");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("type")
                        .HasDefaultValueSql("''")
                        .UseCollation("utf8mb4_unicode_ci");

                    b.ToTable((string)null);

                    b.ToView("role_work_readonly", (string)null);
                });

            modelBuilder.Entity("WebGP.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday_date");

                    b.Property<int?>("CardId")
                        .HasColumnType("int(11)")
                        .HasColumnName("card_id");

                    b.Property<int>("CardRegen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("card_regen")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("ConnectDate")
                        .HasColumnType("datetime")
                        .HasColumnName("connect_date");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<int>("Exp")
                        .HasColumnType("int(11)")
                        .HasColumnName("exp");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("last_name");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("last_update")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<bool?>("Male")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("male")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("Phone")
                        .HasColumnType("int(11)")
                        .HasColumnName("phone");

                    b.Property<int>("PhoneRegen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("phone_regen")
                        .HasDefaultValueSql("'3'");

                    b.Property<int>("Role")
                        .HasColumnType("int(11)")
                        .HasColumnName("role");

                    b.Property<DateTime?>("RoleTime")
                        .HasColumnType("datetime")
                        .HasColumnName("role_time");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("uuid");

                    b.Property<int>("Wanted")
                        .HasColumnType("int(11)")
                        .HasColumnName("wanted");

                    b.Property<int>("WantedId")
                        .HasColumnType("int(11)")
                        .HasColumnName("wanted_id");

                    b.Property<int?>("Work")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("work")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime")
                        .HasColumnName("work_time");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Phone" }, "phone")
                        .IsUnique();

                    b.HasIndex(new[] { "Uuid" }, "uuid")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });

            modelBuilder.Entity("WebGP.Domain.Entities.WorkReadonly", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Type")
                        .HasColumnType("enum('WORK')")
                        .HasColumnName("type");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id", "Type")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("work_readonly", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_ci");
                });
#pragma warning restore 612, 618
        }
    }
}
